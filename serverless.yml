# NOTE: update this with your service name
service: forum-communication

# Use the serverless-webpack plugin to transpile ES6
plugins:
  - serverless-pseudo-parameters
  - serverless-iam-roles-per-function
  - serverless-plugin-tracing
  - serverless-webpack
  - serverless-dynamodb-autoscaling      
  - serverless-offline

# serverless-webpack configuration
# Enable auto-packing of external modules
custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  advertisementsTableName: forum-comm-${self:provider.stage}-advertisements
  metadataBucketName: forum-comm-${self:provider.stage}-metadata
  advertisementsTableArn: 
    Fn::Join:
    - ":"
    - - arn
      - aws
      - dynamodb
      - Ref: AWS::Region
      - Ref: AWS::AccountId
      - table/${self:custom.advertisementsTableName}
  feed2Arn:
    Fn::Join:
      - ":"
      - - arn
        - aws
        - sns
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - feed2  
  feed3Arn:
    Fn::Join:
      - ":"
      - - arn
        - aws
        - sns
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - feed3   
  readDbArn:
    Fn::Join:
      - ":"
      - - arn
        - aws
        - sns
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - readDb  
  updateConfigArn:
    Fn::Join:
      - ":"
      - - arn
        - aws
        - sns
        - Ref: AWS::Region
        - Ref: AWS::AccountId
        - updateConfig                         
        
  capacities:
    - table: advertisementsTableName
      read:
        minimum: 1        # Minimum read capacity 
        maximum: 50       # Maximum read capacity 
        usage: 0.75       # Targeted usage percentage       


provider:
  name: aws
  runtime: nodejs8.10
  memorySize: 128
  stage: dev
  region: us-east-1
  tracing: true 
  environment:
    ADVERTISEMENTS_TABLE_NAME: ${self:custom.advertisementsTableName}    

functions:
  get:
    handler: frontend_api/functions/get.main
    events:
      - http:
          path: advertisement
          method: get
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - dynamodb:GetItem
        Resource: ${self:custom.advertisementsTableArn}     
      - Effect: "Allow" 
        Action:
          - "xray:PutTraceSegments"
          - "xray:PutTelemetryRecords"
        Resource:
          - "*"     
          
  feed1:
    handler: background_worker/functions/feed1.main
    events:
      - schedule: rate(1 hour)
    environment: 
      FEED2_ARN: ${self:custom.feed2Arn}
    iamRoleStatements:
      - Effect: Allow
        Action: 
          - "sns:Publish"
        Resource: ${self:custom.feed2Arn}     
      - Effect: "Allow" 
        Action:
          - "xray:PutTraceSegments"
          - "xray:PutTelemetryRecords"
        Resource:
          - "*"     
          
  feed2:
    handler: background_worker/functions/feed2.main
    events:
      - sns: feed2
    environment: 
      FEED3_ARN: ${self:custom.feed3Arn}    
    iamRoleStatements:   
      - Effect: Allow
        Action: 
          - "sns:Publish"
        Resource: ${self:custom.feed3Arn}        
      - Effect: "Allow" 
        Action:
          - "xray:PutTraceSegments"
          - "xray:PutTelemetryRecords"
        Resource:
          - "*"       
          
  feed3:
    handler: background_worker/functions/feed3.main
    events:
      - sns: feed3
    environment: 
      READDB_ARN: ${self:custom.readDbArn}       
    iamRoleStatements:   
      - Effect: Allow
        Action: 
          - "sns:Publish"
        Resource: ${self:custom.readDbArn}        
      - Effect: "Allow" 
        Action:
          - "xray:PutTraceSegments"
          - "xray:PutTelemetryRecords"
        Resource:
          - "*"    
          
  readDb:
    handler: background_worker/functions/readDb.main
    events:
      - sns: readDb
    environment: 
      UPDATE_CONFIG_ARN: ${self:custom.updateConfigArn}     
    iamRoleStatements:   
      - Effect: Allow
        Action: 
          - "sns:Publish"
        Resource: ${self:custom.updateConfigArn}        
      - Effect: "Allow" 
        Action:
          - "xray:PutTraceSegments"
          - "xray:PutTelemetryRecords"
        Resource:
          - "*"        
          
  updateConfig:
    handler: background_worker/functions/updateConfig.main
    events:
      - sns: updateConfig
    environment: 
      METADATA_BUCKET: ${self:custom.metadataBucketName}    
    iamRoleStatements:     
      - Effect: "Allow" 
        Action:
          - "s3:PutObject"
        Resource:
          Fn::Join:
            - ""
            - - "arn:aws:s3:::"
              - Ref: metadataBucketName
              - "/*"        
      - Effect: "Allow" 
        Action:
          - "xray:PutTraceSegments"
          - "xray:PutTelemetryRecords"
        Resource:
          - "*"            
        
resources:
  Resources:
    advertisementsTableName:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${self:custom.advertisementsTableName}
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH   
    metadataBucketName:
      Type: AWS::S3::Bucket
      Properties:
        AccessControl: Private
        BucketName: ${self:custom.metadataBucketName}            